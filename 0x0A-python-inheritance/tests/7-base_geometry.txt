
	>>> from 7-base_geometry import BaseGeometry

SECCUS CASES:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", (5))

	>>> bg.integer_validator("", 2)

	>>> bg.integer_validator(None, 2)


FAILED ONES:

	>>> bg.integer_validator("name", 0)
	Traceback (most recent call last):
	ValueError: name must be greater than 0

	>>> bg.integer_validator("name", -3)
	Traceback (most recent call last):
	ValueError: name must be greater than 0

	>>> bg.integer_validator("name", "mada")
	Traceback (most recent call last):
	ValueError: name must be an integer

	>>> bg.integer_validator("name", [5])
	Traceback (most recent call last):
	ValueError: name must be an integer

	>>> bg.integer_validator("name", (3.0))
	Traceback (most recent call last):
	ValueError: name must be an integer

	>>> bg.integer_validator("name", None)
	Traceback (most recent call last):
	ValueError: name must be an integer

	>>> bg.integer_validator("name", "10")
	Traceback (most recent call last):
	ValueError: name must be an integer

	>>> bg.integer_validator("name")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator(1, 2, 3)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

	>>> bg.integer_validator("name", 2.3)
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("name", True)
	Traceback (most recent call last):
	ValueError: name must be an integer

	>>> bg.integer_validator("name", (1, 3))
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("name", {1, 3})
	Traceback (most recent call last):
	TypeError: name must be an integer
