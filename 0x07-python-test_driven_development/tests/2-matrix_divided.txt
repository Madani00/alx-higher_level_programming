"""
Divide a matrix, function: "def matrix_divided(matrix, div):
"""
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCESS CASES:

	>>> matrix_divided([[2, 4, 8], [1, 2, 3]], 2)
    	[[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]

	>>> matrix_divided([[1, -2, -4], [1.5, -1.2, 6]], 2)
	[[0.5, -1.0, -2.0], [0.75, -0.6, 3.0]]

	>>> matrix_divided([[1, -2, -4, -3], [1.5, -1.2, 6, 0.1]], 2)
	[[0.5, -1.0, -2.0, -1.5], [0.75, -0.6, 3.0, 0.05]]


FAIL CASES:


	>>> matrix_divided([[1, 2, "string"], [4, 5, 6]], 3)
	Traceback (most recent call last):
	TypeError: unsupported operand type(s) for /: 'str' and 'int'

	>>> matrix_divided([[2, 1], [4, 5, 6]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[3, “9”], [15, 3]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (array of arrays of integers/floats)

	>>> matrix_divided([{'m': 3, 'a': 2, 'b': 5}, [4, 5, 5]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([None, None], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided(matrix, None)
    	Traceback (most recent call last):
    	TypeError: div must be a number

	>>> matrix_divided([1, 2, 3], 4)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
